{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with base URL\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Authentication API\nexport const authAPI = {\n  login: (email, password) => {\n    return apiClient.post('/auth/login', {\n      email,\n      password\n    });\n  },\n  register: (name, email, password) => {\n    return apiClient.post('/auth/signup', {\n      name,\n      email,\n      password\n    });\n  }\n};\n\n// Predictions API\nexport const predictionsAPI = {\n  getPredictions: (matchday, filters = {}) => {\n    return apiClient.get(`/predict/${matchday}`, {\n      params: filters\n    });\n  },\n  optimizeFormation: (userId, matchday, formation = null) => {\n    const params = {\n      matchday\n    };\n    if (formation) params.formation = formation;\n    return apiClient.get(`/optimize/formation/${userId}`, {\n      params\n    });\n  },\n  recommendTransfers: (userId, matchday, budget = 0, maxTransfers = 2) => {\n    return apiClient.get(`/recommend/transfers/${userId}`, {\n      params: {\n        matchday,\n        budget,\n        max_transfers: maxTransfers\n      }\n    });\n  }\n};\n\n// Squad API\nexport const squadAPI = {\n  getSquad: userId => {\n    return apiClient.get(`/squad/${userId}`);\n  },\n  addPlayer: (squadId, playerId) => {\n    return apiClient.post(`/squad/${squadId}/player`, {\n      player_id: playerId\n    });\n  },\n  removePlayer: (squadId, playerId) => {\n    return apiClient.delete(`/squad/${squadId}/player/${playerId}`);\n  }\n};\n\n// Players API\nexport const playersAPI = {\n  getPlayers: (filters = {}) => {\n    return apiClient.get('/players', {\n      params: filters\n    });\n  },\n  getPlayerDetails: playerId => {\n    return apiClient.get(`/players/${playerId}`);\n  }\n};\nexport default {\n  auth: authAPI,\n  predictions: predictionsAPI,\n  squad: squadAPI,\n  players: playersAPI\n};","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","authAPI","login","email","password","post","register","name","predictionsAPI","getPredictions","matchday","filters","get","params","optimizeFormation","userId","formation","recommendTransfers","budget","maxTransfers","max_transfers","squadAPI","getSquad","addPlayer","squadId","playerId","player_id","removePlayer","delete","playersAPI","getPlayers","getPlayerDetails","auth","predictions","squad","players"],"sources":["/mnt/c/Users/Antongiulio/Desktop/PERSONAL PROJECTS/FANTA(I)/FANTACALCIO_AI/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with base URL\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Authentication API\nexport const authAPI = {\n  login: (email, password) => {\n    return apiClient.post('/auth/login', { email, password });\n  },\n  register: (name, email, password) => {\n    return apiClient.post('/auth/signup', { name, email, password });\n  },\n};\n\n// Predictions API\nexport const predictionsAPI = {\n  getPredictions: (matchday, filters = {}) => {\n    return apiClient.get(`/predict/${matchday}`, { params: filters });\n  },\n  optimizeFormation: (userId, matchday, formation = null) => {\n    const params = { matchday };\n    if (formation) params.formation = formation;\n    return apiClient.get(`/optimize/formation/${userId}`, { params });\n  },\n  recommendTransfers: (userId, matchday, budget = 0, maxTransfers = 2) => {\n    return apiClient.get(`/recommend/transfers/${userId}`, {\n      params: { matchday, budget, max_transfers: maxTransfers }\n    });\n  }\n};\n\n// Squad API\nexport const squadAPI = {\n  getSquad: (userId) => {\n    return apiClient.get(`/squad/${userId}`);\n  },\n  addPlayer: (squadId, playerId) => {\n    return apiClient.post(`/squad/${squadId}/player`, { player_id: playerId });\n  },\n  removePlayer: (squadId, playerId) => {\n    return apiClient.delete(`/squad/${squadId}/player/${playerId}`);\n  }\n};\n\n// Players API\nexport const playersAPI = {\n  getPlayers: (filters = {}) => {\n    return apiClient.get('/players', { params: filters });\n  },\n  getPlayerDetails: (playerId) => {\n    return apiClient.get(`/players/${playerId}`);\n  }\n};\n\nexport default {\n  auth: authAPI,\n  predictions: predictionsAPI,\n  squad: squadAPI,\n  players: playersAPI\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}