{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Antongiulio/Desktop/PERSONAL PROJECTS/FANTA(I)/FANTACALCIO_AI/frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // ðŸ”¥ CONTROLLO CRITICO: verifica se la risposta Ã¨ ok PRIMA di fare .json()\n      if (!response.ok) {\n        let errorMessage = \"Errore durante la registrazione\";\n\n        // Prova a leggere il messaggio di errore dal server\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.detail || errorData.message || errorMessage;\n        } catch (jsonError) {\n          // Se non riesce a parsare come JSON, usa lo status HTTP\n          errorMessage = `Errore ${response.status}: ${response.statusText}`;\n        }\n        throw new Error(errorMessage);\n      }\n\n      // Solo se response.ok Ã¨ true, procedi con il parsing JSON\n      const data = await response.json();\n      login(data);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Errore fetch:\", error);\n      alert(error.message || \"Errore di connessione al server\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrazione\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Registrazione in corso...\" : \"Registrati\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"gL7Kf9C3sYXQjKzpcuGNx/SMGC0=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","jsxDEV","_jsxDEV","Register","_s","login","navigate","email","setEmail","password","setPassword","isLoading","setIsLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorMessage","errorData","json","detail","message","jsonError","status","statusText","Error","data","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","disabled","type","_c","$RefreshReg$"],"sources":["/mnt/c/Users/Antongiulio/Desktop/PERSONAL PROJECTS/FANTA(I)/FANTACALCIO_AI/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      // ðŸ”¥ CONTROLLO CRITICO: verifica se la risposta Ã¨ ok PRIMA di fare .json()\n      if (!response.ok) {\n        let errorMessage = \"Errore durante la registrazione\";\n        \n        // Prova a leggere il messaggio di errore dal server\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.detail || errorData.message || errorMessage;\n        } catch (jsonError) {\n          // Se non riesce a parsare come JSON, usa lo status HTTP\n          errorMessage = `Errore ${response.status}: ${response.statusText}`;\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      // Solo se response.ok Ã¨ true, procedi con il parsing JSON\n      const data = await response.json();\n      login(data);\n      navigate(\"/\");\n      \n    } catch (error) {\n      console.error(\"Errore fetch:\", error);\n      alert(error.message || \"Errore di connessione al server\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Registrazione</h2>\n      <form onSubmit={handleSubmit}>\n        <input \n          placeholder=\"Email\" \n          value={email} \n          onChange={e => setEmail(e.target.value)}\n          disabled={isLoading}\n        />\n        <input \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password} \n          onChange={e => setPassword(e.target.value)}\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? \"Registrazione in corso...\" : \"Registrati\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}